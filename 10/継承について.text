重複を懸念する場合は、類似したクラスを作ることができる”継承”という機能を使用します。
これを使えば全体的にスッキリしたコードを作成することができます。

継承を用いたクラスの定義方法
ーーーーーーーーーーーーーーーーーーーーーーーーーーーーー
public class クラス名 extends 元となるクラス名 {
    親クラスとの「差分」メンバ
}
ーーーーーーーーーーーーーーーーーーーーーーーーーーーーー

図における継承関係の記述方法は、下記となる。
 -------------------------------
| 親クラス			|
|（スーパークラス，基底クラス）	|
 -------------------------------
		↑
 -------------------------------
| 子クラス			|
|（サブクラス，派生クラス）		|
 -------------------------------

正しい継承と間違った継承
is-aの原則
子クラスis-a親クラス（子クラスは親クラスの一種）
関連性のある関係でのみ継承を用いる。
関連性がないと現実世界との乖離が発生してしまうためオブジェクト思考に反する