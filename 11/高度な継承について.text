曖昧なクラスたちの定義方法
立場1: 現在、目の前のプログラム開発に必要なクラスを作る開発者（既存クラスを継承し子クラスを作る）。
立場2: 未来に備え、別の開発者が将来利用するであろうクラスを準備しておく開発者（親クラスとなるクラスを作っておく）。

上記の2つの立場を持つエンジニアがおり、高度な継承では立場2の視点する必要とする。
高度な継承では、立場1の開発者が効率よく安心して利用できる継承の材料を作成するという意味をもつ。


2つの不都合と3つの心配
不都合A	→　第1の心配事
	→　第2の心配事
不都合B	→　第3の心配事

不都合Aとは...
継承の材料となるクラスを作る時点では、その処理内容をまだ確定できない詳細未定のメソッドが存在する。
＜間違った解決方法＞
親クラス(スーパークラス)にメソッドを作成せず、子クラス(サブクラス)に毎回新しいメソッドとして追加していく。
第1の心配事...
オーバーライドを忘れる。